{"version":3,"file":"bundle.js","sources":["../src/test/compare.js","../src/test/assert.js","../src/test/tester.js","../src/test/compare-tests.js","../node_modules/d3-hierarchy/src/hierarchy/count.js","../node_modules/d3-hierarchy/src/hierarchy/each.js","../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","../node_modules/d3-hierarchy/src/hierarchy/sum.js","../node_modules/d3-hierarchy/src/hierarchy/sort.js","../node_modules/d3-hierarchy/src/hierarchy/path.js","../node_modules/d3-hierarchy/src/hierarchy/ancestors.js","../node_modules/d3-hierarchy/src/hierarchy/descendants.js","../node_modules/d3-hierarchy/src/hierarchy/leaves.js","../node_modules/d3-hierarchy/src/hierarchy/links.js","../node_modules/d3-hierarchy/src/hierarchy/index.js","../src/flextree.js","../src/test/api-tests.js","../src/test/test-trees.js","../src/test/layout-tests.js","../src/test/main.js"],"sourcesContent":["/* eslint-disable complexity, indent */\nexport const type = value => {\n  const t = typeof value;\n  return value === null || t === 'undefined' || t === 'number' ||\n    t === 'string' || t === 'boolean' ? 'scalar'\n    : t === 'function' ? 'function'\n    : Array.isArray(value) ? 'array'\n    : 'object';\n};\n/* eslint-enable complexity, indent */\n\n// This returns true if the `actual` matches `expected` at every path at\n// which expected is defined. If `expected` is a scalar, then `compare` is\n// used to determine a match. If `expected` is a function, then that function,\n// evaluated against `actual`, is used to determine a match. For\n// `compare` or an `expected` function, a return value of\n// `true` indicates a match; anything else is considered a mismatch.\n// If there are any mismatches, then this returns an array of {path, desc}.\n// If `findAll` is false, then the array will have only the first mismatch.\n/* eslint-disable complexity */\nexport const deepCompare = compare => {\n  const _dc = (actual, expected, failFast=true, path=[]) => {\n    const mismatches = [];\n    const mismatch = desc => {\n      mismatches.push({ desc, path: path.slice() });\n    };\n    const t = type(expected);\n    const aType = type(actual);\n\n    if (t === 'function') {\n      const result = expected(actual);\n      if (result !== true) mismatch(result);\n    }\n    else if (t !== aType) {\n      mismatch(`Expected type ${t}, found ${aType}`);\n    }\n    else if (t === 'scalar') {\n      if (compare(actual, expected) !== true) {\n        mismatch(`Expected value to match ${expected}, found ${actual}`);\n      }\n    }\n    else if (t === 'array' || t === 'object') {\n      for (const key of Object.keys(expected)) {\n        if (!(key in actual)) {\n          mismatch(`Missing expected key ${key}`);\n          if (failFast) break;\n        }\n        const result = _dc(actual[key], expected[key], failFast, path.concat(key));\n        if (result !== true) {\n          mismatches.push(...result);\n          if (failFast) break;\n        }\n      }\n    }\n    return mismatches.length === 0 ? true : mismatches;\n  };\n  return _dc;\n};\n/* eslint-enable complexity */\n\nexport const deepEqual =\n  deepCompare((actual, expected) => Object.is(actual, expected));\n\nexport const round6 = number => {\n  const v = Math.round(1000000 * number) / 1000000;\n  return Math.abs(v) > 0.000001 ? v : 0;\n};\n\nexport const close = (actual, expected) =>\n  Object.is(actual, expected) || round6(+actual) === round6(+expected);\n\nexport const deepClose = deepCompare(close);\n","import {close, deepEqual, deepClose} from './compare';\n\nexport class Assertion {\n  constructor(name, arity, test) {\n    this.name = name;\n    this.test = test;\n    this.arity = arity;\n  }\n  get function() {\n    const func = (...args) => {\n      const msg =\n        args.length > this.arity ? ': ' + args[this.arity]\n          : ', arguments: ' + args;\n      const pass = this.test(...args);\n      if (!pass) throw Error(`assertion '${this.name}' failed${msg}`);\n    };\n    func.assertion = this;\n    return func;\n  }\n}\n\nconst assertionList = [\n  ['pass', 0, () => true],\n  ['fail', 0, () => false],\n  ['truthy', 1, value => !!value],\n  ['falsy', 1,  value => !value],\n  ['true', 1, value => value === true],\n  ['false', 1, value => value === false],\n  ['is', 2, (value, expected) => Object.is(value, expected)],\n  ['not', 2, (value, expected) => !Object.is(value, expected)],\n  ['deepEqual', 2, (value, expected) => deepEqual(value, expected) === true],\n  ['notDeepEqual', 2, (value, expected) => deepEqual(value, expected) !== true],\n  ['close', 2, (value, expected) => close(value, expected)],\n  ['deepClose', 2, (value, expected) => deepClose(value, expected) === true],\n  ['notDeepClose', 2, (value, expected) => deepClose(value, expected) !== true],\n].map(data => new Assertion(...data));\n\nexport default Object.assign({},\n  ...assertionList.map(a => ({ [a.name]: a.function }))\n);\n","import assert from './assert';\n\nconst defaults = {\n  verbose: false,\n  failFast: false,\n  log: console.log.bind(console),  // eslint-disable-line no-console\n  error: console.error.bind(console),  // eslint-disable-line no-console\n};\nconst tester = opts => {\n  const options = Object.assign({}, defaults, opts);\n  const {verbose, failFast, log, error} = options;\n  const results = [];\n  let failedCount = 0;\n  const test = (desc, testFunc) => {\n    if (failedCount > 0 && failFast) return;\n    try {\n      if (verbose) log(`Test ${desc}`);\n      testFunc(assert);\n      if (verbose) log('passed');\n      results.push([desc, true]);\n    }\n    catch(err) {\n      error(`Test ${desc} failed: `, err);\n      results.push([desc, false]);\n      failedCount++;\n    }\n  };\n  const done = () => {\n    if (failedCount === 0) {\n      log('All passed');\n    }\n    else {\n      if (failFast) error('Failed');\n      else error(`Failed ${failedCount} of ${results.length}`);\n    }\n    if (typeof process === 'undefined') {\n      console.info(failedCount);  // eslint-disable-line no-console\n    }\n    else {\n      process.exit(failedCount);\n    }\n  };\n  Object.assign(test, options, {\n    results,\n    done,\n  });\n  return test;\n};\n\nexport default tester;\n","import {deepEqual, deepClose} from './compare';\n\nconst tests = test => {\n  test('deepEqual types', t => {\n    t.true(deepEqual(0, 0));\n    t.true(deepEqual(null, null));\n    t.true(deepEqual(NaN, NaN));\n    t.true(deepEqual(false, false));\n\n    t.true(deepEqual([], []));\n    t.true(deepEqual({}, {}));\n\n    const resultA = deepEqual(5, []);\n    t.true(Array.isArray(resultA));\n    t.is(resultA.length, 1);\n    const ra0 = resultA[0];\n    t.true('desc' in ra0);\n    t.is(typeof ra0.desc, 'string');\n    t.true(ra0.desc.includes('type'));\n    t.true('path' in ra0);\n    t.true(Array.isArray(ra0.path));\n    t.is(ra0.path.length, 0);\n\n    t.is(deepEqual([[]], [[]]), true);\n  });\n\n  test('deepEqual values', t => {\n    const actual = [0, 'a', false, {}];\n    t.true(deepEqual(actual, [0, 'a', false, {}]));\n    // test that it only compares keys in expected\n    t.true(deepEqual(actual, [0, 'a']));\n    // test expected array missing a middle value\n    const expA = [0];\n    expA[2] = false;\n    t.true(deepEqual(actual, expA));\n\n    const resultB = deepEqual(actual, [0, 9, 'a']);\n    t.true(Array.isArray(resultB) && resultB.length === 1 &&\n      ('desc' in resultB[0]) && typeof resultB[0].desc === 'string' &&\n      resultB[0].desc.includes('value'));\n  });\n\n  const testArr = () => {\n    let undefined;\n    const arr = [];\n    arr[1] = null;\n    arr[2] = undefined;\n    arr[5] = -5;\n    arr[7] = NaN;\n    arr[8] = {};\n    arr[9] = 100;\n    return arr;\n  };\n  const testObj = () => {\n    const obj = {\n      a: 123,\n      '-2': [ 4, true, null ],\n      'false': {\n        ca: 7.8,\n        'class': NaN,\n        n: [ 7, 8, { yabble: 'blop' } ],\n      },\n      cat: 'scratch',\n      bat: 7,\n    };\n    obj[2] = 2;\n    return obj;\n  };\n\n  test('deepEqual nested', t => {\n    t.true(deepEqual(testArr(), testArr()), 'test array equal to itself');\n\n    const expA = [];\n    expA[7] = NaN;\n    t.true(deepEqual(testArr(), expA), 'sparse expected array');\n\n    t.true(deepEqual(testObj(), testObj()), 'test object equal to itself');\n\n    const expB = testObj();\n    delete expB['-2'];\n    delete expB['false'].ca;\n    t.true(deepEqual(testObj(), expB), 'sparse expected object');\n  });\n\n  test('deepClose', t => {\n    const actA = testArr();\n    const expA = testArr();\n    expA[9] = 100.00000001;\n    t.true(Array.isArray(deepEqual(actA, expA)), 'arrays close but not equal');\n    const closeA = deepClose(actA, expA);\n    t.true(closeA, 'arrays are close');\n\n    const actB = testObj();\n    const expB = testObj();\n    delete expB.cat;\n    expB['false'].ca += 0.000000001;\n    t.true(Array.isArray(deepEqual(actB, expB)), 'objects not equal');\n    t.true(deepClose(actB, expB), 'objects are close');\n  });\n\n  test('failFast off', t => {\n    t.true(deepEqual(testArr(), testArr(), false));\n\n    const actA = testObj();\n    const expA = testObj();\n    expA.bat = 7.01;\n    expA['false'].n[2].yabble = 'bloop';\n    const ra = deepEqual(actA, expA, false);\n    t.is(ra.length, 2);\n    const ra0 = ra[0];\n    t.true(ra0.desc.includes('bloop') && ra0.desc.includes('blop'));\n    const ra0p = ra[0].path;\n    t.is(ra0p[0], 'false');\n    t.is(ra0p[1], 'n');\n    t.is(ra0p[2], '2');\n    t.is(ra0p[3], 'yabble');\n  });\n\n  test('expected function', t => {\n    const actA = testObj();\n    const expA = testObj();\n    expA['false'].n[2].yabble = str => str.length === 4;\n    expA.cat = str => str.length === 7;\n    const resA = deepEqual(actA, expA);\n    t.true(resA);\n\n    const actB = actA;\n    const expB = testObj();\n    expB.cat = str => str.length === 6;\n    const resB = deepEqual(actB, expB);\n    t.true(Array.isArray(resB));\n  });\n};\n\nexport default tests;\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","import {hierarchy} from 'd3-hierarchy';\nimport packageInfo from '../package.json';\n\nconst {version} = packageInfo;\nconst defaults = Object.freeze({\n  children: data => data.children,\n  nodeSize: node => node.data.size,\n  spacing: 0,\n});\n\n// Create a layout function with customizable options. Per D3-style, the\n// options can be set at any time using setter methods. The layout function\n// will compute the tree node positions based on the options in effect at the\n// time it is called.\nexport default function flextree(options) {\n  const opts = Object.assign({}, defaults, options);\n  function accessor(name) {\n    const opt = opts[name];\n    return typeof opt === 'function' ? opt : () => opt;\n  }\n\n  function layout(tree) {\n    const wtree = wrap(getWrapper(), tree, node=>node.children);\n    wtree.update();\n    return wtree.data;\n  }\n\n  function getFlexNode() {\n    const nodeSize = accessor('nodeSize');\n    const spacing = accessor('spacing');\n    return class FlexNode extends hierarchy.prototype.constructor {\n      constructor(data) {\n        super(data);\n      }\n      copy() {\n        const c = wrap(this.constructor, this, node=>node.children);\n        c.each(node => node.data = node.data.data);\n        return c;\n      }\n      get size() { return nodeSize(this); }\n      spacing(oNode) { return spacing(this, oNode); }\n      get nodes() { return this.descendants(); }\n      get xSize() { return this.size[0]; }\n      get ySize() { return this.size[1]; }\n      get top() { return this.y; }\n      get bottom() { return this.y + this.ySize; }\n      get left() { return this.x - this.xSize / 2; }\n      get right() { return this.x + this.xSize / 2; }\n      get root() {\n        const ancs = this.ancestors();\n        return ancs[ancs.length - 1];\n      }\n      get numChildren() {\n        return this.hasChildren ? this.children.length : 0;\n      }\n      get hasChildren() { return !this.noChildren; }\n      get noChildren() { return this.children === null; }\n      get firstChild() {\n        return this.hasChildren ? this.children[0] : null;\n      }\n      get lastChild() {\n        return this.hasChildren ? this.children[this.numChildren - 1] : null;\n      }\n      get extents() {\n        return (this.children || []).reduce(\n          (acc, kid) => FlexNode.maxExtents(acc, kid.extents),\n          this.nodeExtents);\n      }\n      get nodeExtents() {\n        return {\n          top: this.top,\n          bottom: this.bottom,\n          left: this.left,\n          right: this.right,\n        };\n      }\n      static maxExtents(e0, e1) {\n        return {\n          top: Math.min(e0.top, e1.top),\n          bottom: Math.max(e0.bottom, e1.bottom),\n          left: Math.min(e0.left, e1.left),\n          right: Math.max(e0.right, e1.right),\n        };\n      }\n    };\n  }\n\n  function getWrapper() {\n    const FlexNode = getFlexNode();\n    const nodeSize = accessor('nodeSize');\n    const spacing = accessor('spacing');\n    return class extends FlexNode {\n      constructor(data) {\n        super(data);\n        Object.assign(this, {\n          x: 0, y: 0,\n          relX: 0, prelim: 0, shift: 0, change: 0,\n          lExt: this, lExtRelX: 0, lThr: null,\n          rExt: this, rExtRelX: 0, rThr: null,\n        });\n      }\n      get size() { return nodeSize(this.data); }\n      spacing(oNode) { return spacing(this.data, oNode.data); }\n      get x() { return this.data.x; }\n      set x(v) { this.data.x = v; }\n      get y() { return this.data.y; }\n      set y(v) { this.data.y = v; }\n      update() {\n        layoutChildren(this);\n        resolveX(this);\n        return this;\n      }\n    };\n  }\n\n  function wrap(FlexClass, treeData, children) {\n    const _wrap = (data, parent) => {\n      const node = new FlexClass(data);\n      Object.assign(node, {\n        parent,\n        depth: parent === null ? 0 : parent.depth + 1,\n        height: 0,\n        length: 1,\n      });\n      const kidsData = children(data) || [];\n      node.children = kidsData.length === 0 ? null\n        : kidsData.map(kd => _wrap(kd, node));\n      if (node.children) {\n        Object.assign(node, node.children.reduce(\n          (hl, kid) => ({\n            height: Math.max(hl.height, kid.height + 1),\n            length: hl.length + kid.length,\n          }), node\n        ));\n      }\n      return node;\n    };\n    return _wrap(treeData, null);\n  }\n\n\n  Object.assign(layout, {\n    nodeSize(arg) {\n      return arguments.length ? (opts.nodeSize = arg, layout) : opts.nodeSize;\n    },\n    spacing(arg) {\n      return arguments.length ? (opts.spacing = arg, layout) : opts.spacing;\n    },\n    children(arg) {\n      return arguments.length ? (opts.children = arg, layout) : opts.children;\n    },\n    hierarchy(treeData, children) {\n      const kids = typeof children === 'undefined' ? opts.children : children;\n      return wrap(getFlexNode(), treeData, kids);\n    },\n    dump(tree) {\n      const nodeSize = accessor('nodeSize');\n      const _dump = i0 => node => {\n        const i1 = i0 + '  ';\n        const i2 = i0 + '    ';\n        const {x, y} = node;\n        const size = nodeSize(node);\n        const kids = (node.children || []);\n        const kdumps = (kids.length === 0) ? ' ' :\n          `,${i1}children: [${i2}${kids.map(_dump(i2)).join(i2)}${i1}],${i0}`;\n        return `{ size: [${size.join(', ')}],${i1}x: ${x}, y: ${y}${kdumps}},`;\n      };\n      return _dump('\\n')(tree);\n    },\n  });\n  return layout;\n}\nflextree.version = version;\n\nconst layoutChildren = (w, y = 0) => {\n  w.y = y;\n  (w.children || []).reduce((acc, kid) => {\n    const [i, lastLows] = acc;\n    layoutChildren(kid, w.y + w.ySize);\n    // The lowest vertical coordinate while extreme nodes still point\n    // in current subtree.\n    const lowY = (i === 0 ? kid.lExt : kid.rExt).bottom;\n    if (i !== 0) separate(w, i, lastLows);\n    const lows = updateLows(lowY, i, lastLows);\n    return [i + 1, lows];\n  }, [0, null]);\n  shiftChange(w);\n  positionRoot(w);\n  return w;\n};\n\n// Resolves the relative coordinate properties - relX and prelim --\n// to set the final, absolute x coordinate for each node. This also sets\n// `prelim` to 0, so that `relX` for each node is its x-coordinate relative\n// to its parent.\nconst resolveX = (w, prevSum, parentX) => {\n  // A call to resolveX without arguments is assumed to be for the root of\n  // the tree. This will set the root's x-coord to zero.\n  if (typeof prevSum === 'undefined') {\n    prevSum = -w.relX - w.prelim;\n    parentX = 0;\n  }\n  const sum = prevSum + w.relX;\n  w.relX = sum + w.prelim - parentX;\n  w.prelim = 0;\n  w.x = parentX + w.relX;\n  (w.children || []).forEach(k => resolveX(k, sum, w.x));\n  return w;\n};\n\n// Process shift and change for all children, to add intermediate spacing to\n// each child's modifier.\nconst shiftChange = w => {\n  (w.children || []).reduce((acc, child) => {\n    const [lastShiftSum, lastChangeSum] = acc;\n    const shiftSum = lastShiftSum + child.shift;\n    const changeSum = lastChangeSum + shiftSum + child.change;\n    child.relX += changeSum;\n    return [shiftSum, changeSum];\n  }, [0, 0]);\n};\n\n// Separates the latest child from its previous sibling\n/* eslint-disable complexity */\nconst separate = (w, i, lows) => {\n  const lSib = w.children[i - 1];\n  const curSubtree = w.children[i];\n  let rContour = lSib;\n  let rSumMods = lSib.relX;\n  let lContour = curSubtree;\n  let lSumMods = curSubtree.relX;\n  let isFirst = true;\n  while (rContour && lContour) {\n    if (rContour.bottom > lows.lowY) lows = lows.next;\n    // How far to the left of the right side of rContour is the left side\n    // of lContour? First compute the center-to-center distance, then add\n    // the \"spacing\"\n    const dist =\n      (rSumMods + rContour.prelim) - (lSumMods + lContour.prelim) +\n      rContour.xSize / 2 + lContour.xSize / 2 +\n      rContour.spacing(lContour);\n    if (dist > 0 || (dist < 0 && isFirst)) {\n      lSumMods += dist;\n      // Move subtree by changing relX.\n      moveSubtree(curSubtree, dist);\n      distributeExtra(w, i, lows.index, dist);\n    }\n    isFirst = false;\n    // Advance highest node(s) and sum(s) of modifiers\n    const rightBottom = rContour.bottom;\n    const leftBottom = lContour.bottom;\n    if (rightBottom <= leftBottom) {\n      rContour = nextRContour(rContour);\n      if (rContour) rSumMods += rContour.relX;\n    }\n    if (rightBottom >= leftBottom) {\n      lContour = nextLContour(lContour);\n      if (lContour) lSumMods += lContour.relX;\n    }\n  }\n  // Set threads and update extreme nodes. In the first case, the\n  // current subtree is taller than the left siblings.\n  if (!rContour && lContour) setLThr(w, i, lContour, lSumMods);\n  // In the next case, the left siblings are taller than the current subtree\n  else if (rContour && !lContour) setRThr(w, i, rContour, rSumMods);\n};\n/* eslint-enable complexity */\n\n// Move subtree by changing relX.\nconst moveSubtree = (subtree, distance) => {\n  subtree.relX += distance;\n  subtree.lExtRelX += distance;\n  subtree.rExtRelX += distance;\n};\n\nconst distributeExtra = (w, curSubtreeI, leftSibI, dist) => {\n  const curSubtree = w.children[curSubtreeI];\n  const n = curSubtreeI - leftSibI;\n  // Are there intermediate children?\n  if (n > 1) {\n    const delta = dist / n;\n    w.children[leftSibI + 1].shift += delta;\n    curSubtree.shift -= delta;\n    curSubtree.change -= dist - delta;\n  }\n};\n\nconst nextLContour = w => {\n  return w.hasChildren ? w.firstChild : w.lThr;\n};\n\nconst nextRContour = w => {\n  return w.hasChildren ? w.lastChild : w.rThr;\n};\n\nconst setLThr = (w, i, lContour, lSumMods) => {\n  const firstChild = w.firstChild;\n  const lExt = firstChild.lExt;\n  const curSubtree = w.children[i];\n  lExt.lThr = lContour;\n  // Change relX so that the sum of modifier after following thread is correct.\n  const diff = lSumMods - lContour.relX - firstChild.lExtRelX;\n  lExt.relX += diff;\n  // Change preliminary x coordinate so that the node does not move.\n  lExt.prelim -= diff;\n  // Update extreme node and its sum of modifiers.\n  firstChild.lExt = curSubtree.lExt;\n  firstChild.lExtRelX = curSubtree.lExtRelX;\n};\n\n// Mirror image of setLThr.\nconst setRThr = (w, i, rContour, rSumMods) => {\n  const curSubtree = w.children[i];\n  const rExt = curSubtree.rExt;\n  const lSib = w.children[i - 1];\n  rExt.rThr = rContour;\n  const diff = rSumMods - rContour.relX - curSubtree.rExtRelX;\n  rExt.relX += diff;\n  rExt.prelim -= diff;\n  curSubtree.rExt = lSib.rExt;\n  curSubtree.rExtRelX = lSib.rExtRelX;\n};\n\n// Position root between children, taking into account their modifiers\nconst positionRoot = w => {\n  if (w.hasChildren) {\n    const k0 = w.firstChild;\n    const kf = w.lastChild;\n    const prelim = (k0.prelim + k0.relX - k0.xSize / 2 +\n      kf.relX + kf.prelim + kf.xSize / 2 ) / 2;\n    Object.assign(w, {\n      prelim,\n      lExt: k0.lExt, lExtRelX: k0.lExtRelX,\n      rExt: kf.rExt, rExtRelX: kf.rExtRelX,\n    });\n  }\n};\n\n// Make/maintain a linked list of the indexes of left siblings and their\n// lowest vertical coordinate.\nconst updateLows = (lowY, index, lastLows) => {\n  // Remove siblings that are hidden by the new subtree.\n  while (lastLows !== null && lowY >= lastLows.lowY)\n    lastLows = lastLows.next;\n  // Prepend the new subtree.\n  return {\n    lowY,\n    index,\n    next: lastLows,\n  };\n};\n","import {flextree} from '../../index.js';\nimport {hierarchy} from 'd3-hierarchy';\nimport packageInfo from '../../package.json';\n\nconst {version} = packageInfo;\n// Several different ways of representing the same tree.\nexport const treeData = {\n  default: {\n    name: 'algert',\n    size: [1, 1],\n    children: [\n      { name: 'blat',\n        size: [2, 4],\n      },\n      { name: 'cluckoo',\n        size: [3, 1],\n        children: [\n          { name: 'dornk',\n            size: [4, 1],\n          },\n        ],\n      },\n    ],\n  },\n  customSize: {\n    name: 'algert',\n    width: 1, height: 1,\n    children: [\n      { name: 'blat',\n        width: 2, height: 4,\n      },\n      { name: 'cluckoo',\n        width: 3, height: 1,\n        children: [\n          { name: 'dornk',\n            width: 4, height: 1,\n          },\n        ],\n      },\n    ],\n  },\n  customChildren: {\n    name: 'algert',\n    size: [1, 1],\n    kids: [\n      { name: 'blat',\n        size: [2, 4],\n      },\n      { name: 'cluckoo',\n        size: [3, 1],\n        kids: [\n          { name: 'dornk',\n            size: [4, 1],\n          },\n        ],\n      },\n    ],\n  },\n  allCustom:\n  [ 'algert', 1, 1,\n    [ 'blat', 2, 4 ],\n    [ 'cluckoo', 3, 1,\n      [ 'dornk', 4, 1 ],\n    ],\n  ],\n};\n\nexport const expected = {\n  default: {\n    x: 0, y: 0,\n    children: [\n      { x: -1.75, y: 1 },\n      { x: 1.25, y: 1,\n        children: [\n          { x: 1.25, y: 2 },\n        ],\n      },\n    ],\n  },\n  sizeConst: {\n    x: 0, y: 0,\n    children: [\n      { x: -1, y: 2 },\n      { x: 1, y: 2,\n        children: [\n          { x: 1, y: 4 },\n        ],\n      },\n    ],\n  },\n  sizeScaled: {\n    x: 0, y: 0,\n    children: [\n      { x: -3.5, y: 2 },\n      { x: 2.5, y: 2,\n        children: [\n          { x: 2.5, y: 4 },\n        ],\n      },\n    ],\n  },\n  spacingConst: {\n    x: 0, y: 0,\n    children: [\n      { x: -2, y: 1 },\n      { x: 1.5, y: 1,\n        children: [\n          { x: 1.5, y: 2 },\n        ],\n      },\n    ],\n  },\n  spacingFunc: {\n    x: 0, y: 0,\n    children: [\n      { x: -3.75, y: 1 },\n      { x: 3.25, y: 1,\n        children: [\n          { x: 3.25, y: 2 },\n        ],\n      },\n    ],\n  },\n  bothFunc: {\n    x: 0, y: 0,\n    children: [\n      { x: -5.5, y: 2 },\n      { x: 4.5, y: 2,\n        children: [\n          { x: 4.5, y: 4 },\n        ],\n      },\n    ],\n  },\n};\n\nconst getName = node => node.data.name;\nconst ref = eNode => aNode => getName(aNode) === getName(eNode);\n\nconst tests = test => {\n  // eslint-disable-next-line no-console\n  const log = test.verbose ? console.log.bind(console) : () => {};\n\n  test('exports', t => {\n    t.is(typeof flextree, 'function');\n    const layout = flextree();\n    t.is(typeof layout, 'function');\n    t.is(flextree.version, version);\n  });\n\n  test('flextree hierarchy, defaults', t => {\n    const layout = flextree();\n    const tree = layout.hierarchy(treeData.default);\n    const [algert, blat, cluckoo, dornk] = tree.nodes;\n    layout(tree);\n    log(layout.dump(tree));\n\n    t.deepClose(algert, {\n      parent: null, depth: 0, height: 2, length: 4,\n      size: [1, 1], xSize: 1, ySize: 1,\n      noChildren: false, hasChildren: true, numChildren: 2,\n      firstChild: ref(blat), lastChild: ref(cluckoo),\n      x: 0, y: 0,\n      top: 0, bottom: 1, left: -0.5, right: 0.5,\n      nodeExtents: { top: 0, bottom: 1, left: -0.5, right: 0.5 },\n      extents: { top: 0, bottom: 5, left: -2.75, right: 3.25 },\n    }, 'algert');\n\n    t.deepClose(blat, {\n      parent: ref(algert), depth: 1, height: 0, length: 1,\n      size: [2, 4], xSize: 2, ySize: 4,\n      noChildren: true, hasChildren: false, numChildren: 0,\n      firstChild: null, lastChild: null,\n      x: -1.75, y: 1,\n      top: 1, bottom: 5, left: -2.75, right: -0.75,\n      nodeExtents: { top: 1, bottom: 5, left: -2.75, right: -0.75 },\n      extents: { top: 1, bottom: 5, left: -2.75, right: -0.75 },\n    }, 'blat');\n\n    t.deepClose(cluckoo, {\n      parent: ref(algert), depth: 1, height: 1, length: 2,\n      size: [3, 1], xSize: 3, ySize: 1,\n      noChildren: false, hasChildren: true, numChildren: 1,\n      firstChild: ref(dornk), lastChild: ref(dornk),\n      x: 1.25, y: 1,\n      top: 1, bottom: 2, left: -0.25, right: 2.75,\n      nodeExtents: { top: 1, bottom: 2, left: -0.25, right: 2.75 },\n      extents: { top: 1, bottom: 3, left: -0.75, right: 3.25 },\n    }, 'cluckoo');\n\n    t.deepClose(dornk, {\n      parent: ref(cluckoo), depth: 2, height: 0, length: 1,\n      size: [4, 1], xSize: 4, ySize: 1,\n      noChildren: true, hasChildren: false, numChildren: 0,\n      firstChild: null, lastChild: null,\n      x: 1.25, y: 2,\n      top: 2, bottom: 3, left: -0.75, right: 3.25,\n      nodeExtents: { top: 2, bottom: 3, left: -0.75, right: 3.25 },\n      extents: { top: 2, bottom: 3, left: -0.75, right: 3.25 },\n    }, 'dornk');\n\n    t.deepClose(tree, expected.default);\n  });\n\n  test('d3 hierarchy, all defaults', t => {\n    const layout = flextree();\n    const tree = hierarchy(treeData.default);\n    layout(tree);\n    log(layout.dump(tree));\n    t.deepClose(tree, expected.default);\n  });\n\n  test('flextree hierarchy, nodeSize constant arg', t => {\n    const layout = flextree({ nodeSize: [2, 2] });\n    const tree = layout.hierarchy(treeData.default);\n    layout(tree);\n    log(layout.dump(tree));\n    t.deepClose(tree, expected.sizeConst);\n  });\n\n  test('d3 hierarchy, nodeSize constant chained', t => {\n    const layout = flextree().nodeSize([2, 2]);\n    const tree = hierarchy(treeData.default);\n    layout(tree);\n    log(layout.dump(tree));\n    t.deepClose(tree, expected.sizeConst);\n  });\n\n  test('flextree hierarchy, nodeSize accessor arg', t => {\n    const layout = flextree({\n      nodeSize: n => [n.data.width, n.data.height],\n    });\n    const tree = layout.hierarchy(treeData.customSize);\n    layout(tree);\n    log(layout.dump(tree));\n    t.deepClose(tree, expected.default);\n  });\n\n  test('flextree hierarchy, nodeSize accessor & scale chained', t => {\n    const layout = flextree()\n      .nodeSize(n => [2 * n.data.width, 2 * n.data.height]);\n    const tree = layout.hierarchy(treeData.customSize);\n    layout(tree);\n    log(layout.dump(tree));\n    t.deepClose(tree, expected.sizeScaled);\n  });\n\n  test('d3 hierarchy, nodeSize scale chained', t => {\n    const layout = flextree()\n      .nodeSize(n => n.data.size.map(v => 2*v));\n    const tree = hierarchy(treeData.default);\n    layout(tree);\n    log(layout.dump(tree));\n    t.deepClose(tree, expected.sizeScaled);\n  });\n\n  test('flextree hierarchy, spacing constant chained', t => {\n    const layout = flextree().spacing(0.5);\n    const tree = layout.hierarchy(treeData.default);\n    layout(tree);\n    log(layout.dump(tree));\n    t.deepClose(tree, expected.spacingConst);\n  });\n\n  test('d3 hierarchy, spacing constant arg', t => {\n    const layout = flextree({ spacing: 0.5 });\n    const tree = hierarchy(treeData.default);\n    layout(tree);\n    log(layout.dump(tree));\n    t.deepClose(tree, expected.spacingConst);\n  });\n\n  test('flextree hierarchy, spacing function arg', t => {\n    const layout = flextree({\n      spacing: (n0, n1) => n0.path(n1).length,\n    });\n    const tree = layout.hierarchy(treeData.default);\n    layout(tree);\n    log(layout.dump(tree));\n    t.deepClose(tree, expected.spacingFunc);\n  });\n\n  test('d3 hierarchy, spacing function, chained', t => {\n    const layout = flextree().spacing((n0, n1) => n0.path(n1).length);\n    const tree = hierarchy(treeData.default);\n    layout(tree);\n    log(layout.dump(tree));\n    t.deepClose(tree, expected.spacingFunc);\n  });\n\n  test('flextree hierarchy, nodeSize & spacing function args', t => {\n    const layout = flextree({\n      nodeSize: n => [2 * n.data.width, 2 * n.data.height],\n      spacing: (n0, n1) => n0.path(n1).length,\n    });\n    const tree = layout.hierarchy(treeData.customSize);\n    layout(tree);\n    log(layout.dump(tree));\n    t.deepClose(tree, expected.bothFunc);\n  });\n\n  test('d3 hierarchy, nodeSize & spacing function args', t => {\n    const layout = flextree({\n      nodeSize: n => [2 * n.data.width, 2 * n.data.height],\n      spacing: (n0, n1) => n0.path(n1).length,\n    });\n    const tree = hierarchy(treeData.customSize);\n    layout(tree);\n    log(layout.dump(tree));\n    t.deepClose(tree, expected.bothFunc);\n  });\n\n  test('flextree hierarchy, children arg to hierarchy', t => {\n    const layout = flextree();\n    const tree = layout.hierarchy(treeData.customChildren, d => d.kids || []);\n    layout(tree);\n    log(layout.dump(tree));\n    t.deepClose(tree, expected.default);\n  });\n\n  test('flextree hierarchy, children arg to flextree', t => {\n    const layout = flextree({children: d => d.kids});\n    const tree = layout.hierarchy(treeData.customChildren);\n    layout(tree);\n    log(layout.dump(tree));\n    t.deepClose(tree, expected.default);\n  });\n\n  test('flextree hierarchy, children chained', t => {\n    const layout = flextree()\n      .children(d => d.kids);\n    const tree = layout.hierarchy(treeData.customChildren);\n    layout(tree);\n    log(layout.dump(tree));\n    t.deepClose(tree, expected.default);\n  });\n\n  test('d3 hierarchy, children', t => {\n    const layout = flextree();\n    const tree = hierarchy(treeData.customChildren, d => d.kids);\n    layout(tree);\n    log(layout.dump(tree));\n    t.deepClose(tree, expected.default);\n  });\n\n  test('flextree hierarchy, all custom args', t => {\n    const layout = flextree({\n      nodeSize: n => n.data.slice(1, 3).map(v => 2*v),\n      spacing: (n0, n1) => n0.path(n1).length,\n      children: d => {\n        const kd = d.slice(3);\n        return kd.length ? kd : null;\n      },\n    });\n    const tree = layout.hierarchy(treeData.allCustom);\n    layout(tree);\n    log(layout.dump(tree));\n    t.deepClose(tree, expected.bothFunc);\n  });\n\n  test('flextree hierarchy, all custom chained', t => {\n    const layout = flextree()\n      .nodeSize(n => n.data.slice(1, 3).map(v => 2*v))\n      .spacing((n0, n1) => n0.path(n1).length)\n      .children(d => {\n        const kd = d.slice(3);\n        return kd.length ? kd : null;\n      });\n    const tree = layout.hierarchy(treeData.allCustom);\n    layout(tree);\n    log(layout.dump(tree));\n    t.deepClose(tree, expected.bothFunc);\n  });\n\n  test('d3 hierarchy, all custom', t => {\n    const layout = flextree({\n      nodeSize: n => n.data.slice(1, 3).map(v => 2*v),\n      spacing: (n0, n1) => n0.path(n1).length,\n    });\n    const tree = hierarchy(treeData.allCustom, d => d.slice(3));\n    layout(tree);\n    log(layout.dump(tree));\n    t.deepClose(tree, expected.bothFunc);\n  });\n\n  // Not recommended.\n  test('reuse layout with changing options', t => {\n    const layout = flextree();\n    const tree0 = layout.hierarchy(treeData.default);\n    layout(tree0);\n    log(layout.dump(tree0));\n    t.deepClose(tree0, expected.default);\n\n    // Switch to custom spacing; the layout of the same tree should be different\n    layout.spacing((n0, n1) => n0.path(n1).length);\n    layout(tree0);\n    log(layout.dump(tree0));\n    t.deepClose(tree0, expected.spacingFunc);\n\n    // Switch to custom nodeSize, the custom spacing should remain.\n    layout.nodeSize(n => n.data.size.map(v => v*2));\n    layout(tree0);\n    // Although the new nodeSize is reflected in the layout, it is not stored\n    // in the tree0 hierarchy itself, so we have to pass an accessor to `dump`.\n    log(layout.dump(tree0));\n    t.deepClose(tree0, expected.bothFunc);\n\n    // Change the children accessor, and remove custom spacing. This will\n    // still work, because the hierarchy is not effected.\n    layout.children(d => d.kids).spacing(0);\n    layout(tree0);\n    log(layout.dump(tree0));\n    t.deepClose(tree0, expected.sizeScaled);\n  });\n\n  test('copy method', t => {\n    const layout = flextree()\n      .nodeSize(n => n.data.slice(1, 3).map(v => 2*v))\n      .spacing((n0, n1) => n0.path(n1).length)\n      .children(d => {\n        const kd = d.slice(3);\n        return kd.length ? kd : null;\n      });\n    const tree = layout.hierarchy(treeData.allCustom);\n    t.true(tree instanceof hierarchy);\n    const copy = tree.copy();\n    t.true(copy instanceof hierarchy);\n    t.is(tree.children[0].data, copy.children[0].data);\n\n    layout(tree);\n    log('tree layout:');\n    log(layout.dump(tree));\n\n    layout(copy);\n    log('copy layout:');\n    log(layout.dump(copy));\n\n    t.deepClose(copy, expected.bothFunc);\n  });\n\n\n};\n\nexport default tests;\n","// `data` specifies node sizes, and\n// `expected` specifies the expected x and y coordinates.\n\nexport default [\n  { desc: 'simplest possible tree',\n    data: [\n      100, 100,\n    ],\n    expected: [\n      0, 0,\n    ],\n    customSpacing: [\n      0, 0,\n    ],\n  },\n  { desc: 'simple tree',\n    data: [\n      30, 50,\n      [ 40, 70,\n        [ 50, 60 ],\n        [ 50, 100 ],\n      ],\n      [ 20, 140,\n        [ 50, 60 ],\n        [ 50, 60 ],\n      ],\n      [ 50, 60,\n        [ 50, 60 ],\n        [ 50, 60 ],\n      ],\n    ],\n    expected: [\n      0, 0,\n      [ -82.5, 50,\n        [ -107.5, 120 ],\n        [ -57.5, 120 ],\n      ],\n      [ 17.5, 50,\n        [ -7.5, 190 ],\n        [ 42.5, 190 ],\n      ],\n      [ 77.5, 50,\n        [ 52.5, 110 ],\n        [ 102.5, 110 ],\n      ],\n    ],\n    customSpacing: [\n      0, 0,\n      [ -109.5, 50,\n        [ -140.5, 120 ],\n        [ -78.5, 120 ],\n      ],\n      [ 22.5, 50,\n        [ -8.5, 190 ],\n        [ 53.5, 190 ],\n      ],\n      [ 104.5, 50,\n        [ 73.5, 110 ],\n        [ 135.5, 110 ],\n      ],\n    ],\n  },\n  { desc: 'another simple tree',\n    data: [\n      40, 40,\n      [ 40, 40 ],\n      [ 40, 40,\n        [ 50, 40 ],\n        [ 50, 40 ],\n        [ 40, 40 ],\n        [ 40, 40 ],\n        [ 40, 40 ],\n      ],\n      [ 40, 40 ],\n    ],\n    expected: [\n      0, 0,\n      [ -40, 40 ],\n      [ 0, 40,\n        [ -85, 80 ],\n        [ -35, 80 ],\n        [ 10, 80 ],\n        [ 50, 80 ],\n        [ 90, 80 ],\n      ],\n      [ 40, 40 ],\n    ],\n    customSpacing: [\n      0, 0,\n      [ -64, 40 ],\n      [ 0, 40,\n        [ -133, 80 ],\n        [ -59, 80 ],\n        [ 10, 80 ],\n        [ 74, 80 ],\n        [ 138, 80 ],\n      ],\n      [ 64, 40 ],\n    ],\n  },\n  { desc: 'layout bug, simple case',\n    data: [\n      40, 40,\n      [ 40, 40 ],\n      [ 40, 40,\n        [ 100, 40 ],\n        [ 200, 40 ],\n      ],\n    ],\n    expected: [\n      0, 0,\n      [ -20, 40 ],\n      [ 20, 40,\n        [ -80, 80 ],\n        [ 70, 80 ],\n      ],\n    ],\n    customSpacing: [\n      0, 0,\n      [ -32, 40 ],\n      [ 32, 40,\n        [ -80, 80 ],\n        [ 94, 80 ],\n      ],\n    ],\n  },\n  { desc: 'layout bug, redux',\n    data: [\n      40, 40,\n      [ 40, 40 ],\n      [ 40, 40,\n        [ 40, 40,\n          [ 100, 40 ],\n          [ 200, 40 ],\n        ],\n      ],\n    ],\n    expected: [\n      0, 0,\n      [ -20, 40 ],\n      [ 20, 40,\n        [ 20, 80,\n          [ -80, 120 ],\n          [ 70, 120 ],\n        ],\n      ],\n    ],\n    customSpacing: [\n      0, 0,\n      [ -32, 40 ],\n      [ 32, 40,\n        [ 32, 80,\n          [ -80, 120 ],\n          [ 94, 120 ],\n        ],\n      ],\n    ],\n  },\n  { desc: 'layout bug, third sibling',\n    data: [\n      40, 40,\n      [ 40, 40 ],\n      [ 40, 40 ],\n      [ 40, 40,\n        [ 40, 40,\n          [ 100, 40 ],\n          [ 200, 40 ],\n        ],\n      ],\n    ],\n    expected:\n    [ 0, 0,\n      [ -40, 40 ],\n      [ 0, 40 ],\n      [ 40, 40,\n        [ 40, 80,\n          [ -60, 120 ],\n          [ 90, 120 ],\n        ],\n      ],\n    ],\n    customSpacing: [\n      0, 0,\n      [ -64, 40 ],\n      [ 0, 40 ],\n      [ 64, 40,\n        [ 64, 80,\n          [ -48, 120 ],\n          [ 126, 120 ],\n        ],\n      ],\n    ],\n  },\n  // My first, naive attempt to fix the layout bug caused this tree's\n  // layout to break:\n  { desc: 'narrower child',\n    data: [\n      20, 20,\n      [ 20, 40 ],\n      [ 20, 20,\n        [ 10, 20 ],\n      ],\n    ],\n    expected: [\n      0, 0,\n      [ -10, 20 ],\n      [ 10, 20,\n        [ 10, 40 ],\n      ],\n    ],\n    customSpacing: [\n      0, 0,\n      [ -13, 20 ],\n      [ 13, 20,\n        [ 13, 40 ],\n      ],\n    ],\n  },\n  { desc: 'redistributed middle sibling - 0',\n    data: [\n      40, 40,\n      [ 40, 40,\n        [ 200, 200 ],\n      ],\n      [ 40, 40 ],\n      [ 40, 40,\n        [ 200, 200 ],\n      ],\n    ],\n    expected: [\n      0, 0,\n      [ -100, 40,\n        [ -100, 80 ],\n      ],\n      [ 0, 40 ],\n      [ 100, 40,\n        [ 100, 80 ],\n      ],\n    ],\n    customSpacing: [\n      0, 0,\n      [ -120, 40,\n        [ -120, 80 ],\n      ],\n      [ 0, 40 ],\n      [ 120, 40,\n        [ 120, 80 ],\n      ],\n    ],\n  },\n  { desc: 'redistributed middle siblings - 1',\n    data: [\n      40, 40,\n      [ 40, 40,\n        [ 40, 40,\n          [ 40, 40,\n            [ 40, 40 ],\n            [ 40, 40 ],\n            [ 40, 40 ],\n            [ 40, 40 ],\n            [ 40, 40 ],\n            [ 40, 40 ],\n            [ 40, 40 ],\n            [ 40, 40 ],\n            [ 40, 40 ],\n          ],\n        ],\n      ],\n      [ 40, 40 ],\n      [ 40, 40 ],\n      [ 40, 40 ],\n      [ 40, 40,\n        [ 40, 40,\n          [ 200, 200 ],\n        ],\n      ],\n    ],\n    expected: [\n      0, 0,\n      [ -140, 40,\n        [ -140, 80,\n          [ -140, 120,\n            [ -300, 160 ],\n            [ -260, 160 ],\n            [ -220, 160 ],\n            [ -180, 160 ],\n            [ -140, 160 ],\n            [ -100, 160 ],\n            [ -60, 160 ],\n            [ -20, 160 ],\n            [ 20, 160 ],\n          ],\n        ],\n      ],\n      [ -70, 40 ],\n      [ 0, 40 ],\n      [ 70, 40 ],\n      [ 140, 40,\n        [ 140, 80,\n          [ 140, 120 ],\n        ],\n      ],\n    ],\n    customSpacing: [\n      0, 0,\n      [ -220, 40,\n        [ -220, 80,\n          [ -220, 120,\n            [ -476, 160 ],\n            [ -412, 160 ],\n            [ -348, 160 ],\n            [ -284, 160 ],\n            [ -220, 160 ],\n            [ -156, 160 ],\n            [ -92, 160 ],\n            [ -28, 160 ],\n            [ 36, 160 ],\n          ],\n        ],\n      ],\n      [ -110, 40 ],\n      [ 0, 40 ],\n      [ 110, 40 ],\n      [ 220, 40,\n        [ 220, 80,\n          [ 220, 120 ],\n        ],\n      ],\n    ],\n  },\n  { desc: 'test extreme data',\n    data: [\n      40, 40,\n      [ 40, 40,\n        [ 40, 100,\n          [ 200, 40 ],\n        ],\n      ],\n      [ 40, 40,\n        [ 40, 40 ],\n        [ 40, 200 ],\n        [ 40, 40 ],\n      ],\n      [ 40, 40,\n        [ 40, 100,\n          [ 200, 40 ],\n        ],\n      ],\n    ],\n    expected: [\n      0, 0,\n      [ -120, 40,\n        [ -120, 80,\n          [ -120, 180 ],\n        ],\n      ],\n      [ 0, 40,\n        [ -40, 80 ],\n        [ 0, 80 ],\n        [ 40, 80 ],\n      ],\n      [ 120, 40,\n        [ 120, 80,\n          [ 120, 180 ],\n        ],\n      ],\n    ],\n    customSpacing: [\n      0, 0,\n      [ -168, 40,\n        [ -168, 80,\n          [ -168, 180 ],\n        ],\n      ],\n      [ 0, 40,\n        [ -64, 80 ],\n        [ 0, 80 ],\n        [ 64, 80 ],\n      ],\n      [ 168, 40,\n        [ 168, 80,\n          [ 168, 180 ],\n        ],\n      ],\n    ],\n  },\n  { desc: 'test redistributing children, from van der Ploeg figure 6',\n    data: [\n      10, 10,\n      [ 10, 15,\n        [ 50, 10 ],\n        [ 50, 10,\n          [ 50, 10 ],\n          [ 50, 10 ],\n        ],\n      ],\n      [ 10, 10 ],\n      [ 10, 10 ],\n      [ 10, 20 ],\n      [ 10, 10 ],\n      [ 10, 30,\n        [ 50, 10 ],\n      ],\n    ],\n    expected: [\n      0, 0,\n      [ -50, 10,\n        [ -75, 25 ],\n        [ -25, 25,\n          [ -50, 35 ],\n          [ 0, 35 ],\n        ],\n      ],\n      [ -(26 + 2/3), 10 ],\n      [ -(3 + 1/3), 10 ],\n      [ 20, 10 ],\n      [ 35, 10 ],\n      [ 50, 10,\n        [ 50, 40 ],\n      ],\n    ],\n    customSpacing: [\n      0, 0,\n      [ -59, 10,\n        [ -87, 25 ],\n        [ -31, 25,\n          [ -59, 35 ],\n          [ -3, 35 ],\n        ],\n      ],\n      [ -33, 10 ],\n      [ -7, 10 ],\n      [ 19, 10 ],\n      [ 39, 10 ],\n      [ 59, 10,\n        [ 59, 40 ],\n      ],\n    ],\n  },\n  { desc: 'modified figure 6 tree',\n    data: [\n      10, 10,\n      [ 10, 15,\n        [ 50, 10 ],\n        [ 50, 10,\n          [ 50, 10 ],\n          [ 50, 10 ],\n        ],\n      ],\n      [ 10, 10 ],\n      [ 10, 10 ],\n      [ 10, 20 ],\n      [ 10, 10 ],\n    ],\n    expected: [\n      0, 0,\n      [ -32.5, 10,\n        [ -57.5, 25 ],\n        [ -7.5, 25,\n          [ -32.5, 35 ],\n          [ 17.5, 35 ],\n        ],\n      ],\n      [ -(14 + 1/6), 10 ],\n      [ 4 + 1/6, 10 ],\n      [ 22.5, 10 ],\n      [ 32.5, 10 ],\n    ],\n    customSpacing: [\n      0, 0,\n      [ -41, 10,\n        [ -69, 25 ],\n        [ -13, 25,\n          [ -41, 35 ],\n          [ 15, 35 ],\n        ],\n      ],\n      [ -19, 10 ],\n      [ 3, 10 ],\n      [ 25, 10 ],\n      [ 41, 10 ],\n    ],\n  },\n  { desc: 'mirror image of figure 6 tree',\n    data: [\n      10, 10,\n      [ 10, 30,\n        [ 50, 10 ],\n      ],\n      [ 10, 10 ],\n      [ 10, 20 ],\n      [ 10, 10 ],\n      [ 10, 10 ],\n      [ 10, 15,\n        [ 50, 12,\n          [ 50, 10 ],\n          [ 50, 8 ],\n        ],\n        [ 50, 10 ],\n      ],\n    ],\n    expected: [\n      0, 0,\n      [ -50, 10,\n        [ -50, 40 ],\n      ],\n      [ -35, 10 ],\n      [ -20, 10 ],\n      [ 3 + 1/3, 10 ],\n      [ 26 + 2/3, 10 ],\n      [ 50, 10,\n        [ 25, 25,\n          [ 0, 37 ],\n          [ 50, 37 ],\n        ],\n        [ 75, 25 ],\n      ],\n    ],\n    customSpacing: [\n      0, 0,\n      [ -59, 10,\n        [ -59, 40 ],\n      ],\n      [ -39, 10 ],\n      [ -19, 10 ],\n      [ 7, 10 ],\n      [ 33, 10 ],\n      [ 59, 10,\n        [ 31, 25,\n          [ 3, 37 ],\n          [ 59, 37 ],\n        ],\n        [ 87, 25 ],\n      ],\n    ],\n  },\n];\n","import {flextree} from '../../index.js';\nimport {hierarchy} from 'd3-hierarchy';\nimport treeSpecs from './test-trees';\n\n\nconst expCoords = spec => Object.assign(\n  { x: spec[0], y: spec[1] },\n  spec.length > 2 ? { children: spec.slice(2).map(expCoords) } : null\n);\n\nconst tests = test => {\n  treeSpecs.forEach((spec, i) => {\n    test('tree-' + i, t => {\n      const tree = hierarchy(spec.data, d => d.slice(2));\n      const layout = flextree({\n        nodeSize: n => n.data.slice(0, 2),\n      });\n      layout(tree);\n      const e = expCoords(spec.expected);\n      t.deepClose(tree, e);\n    });\n  });\n};\n\nexport default tests;\n","import tester from './tester';\nimport compareTests from './compare-tests';\nimport apiTests from './api-tests';\nimport layoutTests from './layout-tests';\n\nconst test = tester({\n  verbose: false,\n  failFast: true,\n});\n\ncompareTests(test);\napiTests(test);\nlayoutTests(test);\n\ntest.done();\n"],"names":["version","defaults","name","moveSubtree","tests","compareTests","apiTests","layoutTests"],"mappings":"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"}