{"version":3,"file":"d3-flextree.js","sources":["../node_modules/d3-hierarchy/src/hierarchy/count.js","../node_modules/d3-hierarchy/src/hierarchy/each.js","../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","../node_modules/d3-hierarchy/src/hierarchy/sum.js","../node_modules/d3-hierarchy/src/hierarchy/sort.js","../node_modules/d3-hierarchy/src/hierarchy/path.js","../node_modules/d3-hierarchy/src/hierarchy/ancestors.js","../node_modules/d3-hierarchy/src/hierarchy/descendants.js","../node_modules/d3-hierarchy/src/hierarchy/leaves.js","../node_modules/d3-hierarchy/src/hierarchy/links.js","../node_modules/d3-hierarchy/src/hierarchy/index.js","../src/flextree.js"],"sourcesContent":["function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","import {hierarchy} from 'd3-hierarchy';\nimport packageInfo from '../package.json';\n\nconst {version} = packageInfo;\nconst defaults = Object.freeze({\n  children: data => data.children,\n  nodeSize: node => node.data.size,\n  spacing: 0,\n});\n\n// Create a layout function with customizable options. Per D3-style, the\n// options can be set at any time using setter methods. The layout function\n// will compute the tree node positions based on the options in effect at the\n// time it is called.\nexport default function flextree(options) {\n  const opts = Object.assign({}, defaults, options);\n  function accessor(name) {\n    const opt = opts[name];\n    return typeof opt === 'function' ? opt : () => opt;\n  }\n\n  function layout(tree) {\n    const wtree = wrap(getWrapper(), tree, node=>node.children);\n    wtree.update();\n    return wtree.data;\n  }\n\n  function getFlexNode() {\n    const nodeSize = accessor('nodeSize');\n    const spacing = accessor('spacing');\n    return class FlexNode extends hierarchy.prototype.constructor {\n      constructor(data) {\n        super(data);\n      }\n      copy() {\n        const c = wrap(this.constructor, this, node=>node.children);\n        c.each(node => node.data = node.data.data);\n        return c;\n      }\n      get size() { return nodeSize(this); }\n      spacing(oNode) { return spacing(this, oNode); }\n      get nodes() { return this.descendants(); }\n      get xSize() { return this.size[0]; }\n      get ySize() { return this.size[1]; }\n      get top() { return this.y; }\n      get bottom() { return this.y + this.ySize; }\n      get left() { return this.x - this.xSize / 2; }\n      get right() { return this.x + this.xSize / 2; }\n      get root() {\n        const ancs = this.ancestors();\n        return ancs[ancs.length - 1];\n      }\n      get numChildren() {\n        return this.hasChildren ? this.children.length : 0;\n      }\n      get hasChildren() { return !this.noChildren; }\n      get noChildren() { return this.children === null; }\n      get firstChild() {\n        return this.hasChildren ? this.children[0] : null;\n      }\n      get lastChild() {\n        return this.hasChildren ? this.children[this.numChildren - 1] : null;\n      }\n      get extents() {\n        return (this.children || []).reduce(\n          (acc, kid) => FlexNode.maxExtents(acc, kid.extents),\n          this.nodeExtents);\n      }\n      get nodeExtents() {\n        return {\n          top: this.top,\n          bottom: this.bottom,\n          left: this.left,\n          right: this.right,\n        };\n      }\n      static maxExtents(e0, e1) {\n        return {\n          top: Math.min(e0.top, e1.top),\n          bottom: Math.max(e0.bottom, e1.bottom),\n          left: Math.min(e0.left, e1.left),\n          right: Math.max(e0.right, e1.right),\n        };\n      }\n    };\n  }\n\n  function getWrapper() {\n    const FlexNode = getFlexNode();\n    const nodeSize = accessor('nodeSize');\n    const spacing = accessor('spacing');\n    return class extends FlexNode {\n      constructor(data) {\n        super(data);\n        Object.assign(this, {\n          x: 0, y: 0,\n          relX: 0, prelim: 0, shift: 0, change: 0,\n          lExt: this, lExtRelX: 0, lThr: null,\n          rExt: this, rExtRelX: 0, rThr: null,\n        });\n      }\n      get size() { return nodeSize(this.data); }\n      spacing(oNode) { return spacing(this.data, oNode.data); }\n      get x() { return this.data.x; }\n      set x(v) { this.data.x = v; }\n      get y() { return this.data.y; }\n      set y(v) { this.data.y = v; }\n      update() {\n        layoutChildren(this);\n        resolveX(this);\n        return this;\n      }\n    };\n  }\n\n  function wrap(FlexClass, treeData, children) {\n    const _wrap = (data, parent) => {\n      const node = new FlexClass(data);\n      Object.assign(node, {\n        parent,\n        depth: parent === null ? 0 : parent.depth + 1,\n        height: 0,\n        length: 1,\n      });\n      const kidsData = children(data) || [];\n      node.children = kidsData.length === 0 ? null\n        : kidsData.map(kd => _wrap(kd, node));\n      if (node.children) {\n        Object.assign(node, node.children.reduce(\n          (hl, kid) => ({\n            height: Math.max(hl.height, kid.height + 1),\n            length: hl.length + kid.length,\n          }), node\n        ));\n      }\n      return node;\n    };\n    return _wrap(treeData, null);\n  }\n\n\n  Object.assign(layout, {\n    nodeSize(arg) {\n      return arguments.length ? (opts.nodeSize = arg, layout) : opts.nodeSize;\n    },\n    spacing(arg) {\n      return arguments.length ? (opts.spacing = arg, layout) : opts.spacing;\n    },\n    children(arg) {\n      return arguments.length ? (opts.children = arg, layout) : opts.children;\n    },\n    hierarchy(treeData, children) {\n      const kids = typeof children === 'undefined' ? opts.children : children;\n      return wrap(getFlexNode(), treeData, kids);\n    },\n    dump(tree) {\n      const nodeSize = accessor('nodeSize');\n      const _dump = i0 => node => {\n        const i1 = i0 + '  ';\n        const i2 = i0 + '    ';\n        const {x, y} = node;\n        const size = nodeSize(node);\n        const kids = (node.children || []);\n        const kdumps = (kids.length === 0) ? ' ' :\n          `,${i1}children: [${i2}${kids.map(_dump(i2)).join(i2)}${i1}],${i0}`;\n        return `{ size: [${size.join(', ')}],${i1}x: ${x}, y: ${y}${kdumps}},`;\n      };\n      return _dump('\\n')(tree);\n    },\n  });\n  return layout;\n}\nflextree.version = version;\n\nconst layoutChildren = (w, y = 0) => {\n  w.y = y;\n  (w.children || []).reduce((acc, kid) => {\n    const [i, lastLows] = acc;\n    layoutChildren(kid, w.y + w.ySize);\n    // The lowest vertical coordinate while extreme nodes still point\n    // in current subtree.\n    const lowY = (i === 0 ? kid.lExt : kid.rExt).bottom;\n    if (i !== 0) separate(w, i, lastLows);\n    const lows = updateLows(lowY, i, lastLows);\n    return [i + 1, lows];\n  }, [0, null]);\n  shiftChange(w);\n  positionRoot(w);\n  return w;\n};\n\n// Resolves the relative coordinate properties - relX and prelim --\n// to set the final, absolute x coordinate for each node. This also sets\n// `prelim` to 0, so that `relX` for each node is its x-coordinate relative\n// to its parent.\nconst resolveX = (w, prevSum, parentX) => {\n  // A call to resolveX without arguments is assumed to be for the root of\n  // the tree. This will set the root's x-coord to zero.\n  if (typeof prevSum === 'undefined') {\n    prevSum = -w.relX - w.prelim;\n    parentX = 0;\n  }\n  const sum = prevSum + w.relX;\n  w.relX = sum + w.prelim - parentX;\n  w.prelim = 0;\n  w.x = parentX + w.relX;\n  (w.children || []).forEach(k => resolveX(k, sum, w.x));\n  return w;\n};\n\n// Process shift and change for all children, to add intermediate spacing to\n// each child's modifier.\nconst shiftChange = w => {\n  (w.children || []).reduce((acc, child) => {\n    const [lastShiftSum, lastChangeSum] = acc;\n    const shiftSum = lastShiftSum + child.shift;\n    const changeSum = lastChangeSum + shiftSum + child.change;\n    child.relX += changeSum;\n    return [shiftSum, changeSum];\n  }, [0, 0]);\n};\n\n// Separates the latest child from its previous sibling\n/* eslint-disable complexity */\nconst separate = (w, i, lows) => {\n  const lSib = w.children[i - 1];\n  const curSubtree = w.children[i];\n  let rContour = lSib;\n  let rSumMods = lSib.relX;\n  let lContour = curSubtree;\n  let lSumMods = curSubtree.relX;\n  let isFirst = true;\n  while (rContour && lContour) {\n    if (rContour.bottom > lows.lowY) lows = lows.next;\n    // How far to the left of the right side of rContour is the left side\n    // of lContour? First compute the center-to-center distance, then add\n    // the \"spacing\"\n    const dist =\n      (rSumMods + rContour.prelim) - (lSumMods + lContour.prelim) +\n      rContour.xSize / 2 + lContour.xSize / 2 +\n      rContour.spacing(lContour);\n    if (dist > 0 || (dist < 0 && isFirst)) {\n      lSumMods += dist;\n      // Move subtree by changing relX.\n      moveSubtree(curSubtree, dist);\n      distributeExtra(w, i, lows.index, dist);\n    }\n    isFirst = false;\n    // Advance highest node(s) and sum(s) of modifiers\n    const rightBottom = rContour.bottom;\n    const leftBottom = lContour.bottom;\n    if (rightBottom <= leftBottom) {\n      rContour = nextRContour(rContour);\n      if (rContour) rSumMods += rContour.relX;\n    }\n    if (rightBottom >= leftBottom) {\n      lContour = nextLContour(lContour);\n      if (lContour) lSumMods += lContour.relX;\n    }\n  }\n  // Set threads and update extreme nodes. In the first case, the\n  // current subtree is taller than the left siblings.\n  if (!rContour && lContour) setLThr(w, i, lContour, lSumMods);\n  // In the next case, the left siblings are taller than the current subtree\n  else if (rContour && !lContour) setRThr(w, i, rContour, rSumMods);\n};\n/* eslint-enable complexity */\n\n// Move subtree by changing relX.\nconst moveSubtree = (subtree, distance) => {\n  subtree.relX += distance;\n  subtree.lExtRelX += distance;\n  subtree.rExtRelX += distance;\n};\n\nconst distributeExtra = (w, curSubtreeI, leftSibI, dist) => {\n  const curSubtree = w.children[curSubtreeI];\n  const n = curSubtreeI - leftSibI;\n  // Are there intermediate children?\n  if (n > 1) {\n    const delta = dist / n;\n    w.children[leftSibI + 1].shift += delta;\n    curSubtree.shift -= delta;\n    curSubtree.change -= dist - delta;\n  }\n};\n\nconst nextLContour = w => {\n  return w.hasChildren ? w.firstChild : w.lThr;\n};\n\nconst nextRContour = w => {\n  return w.hasChildren ? w.lastChild : w.rThr;\n};\n\nconst setLThr = (w, i, lContour, lSumMods) => {\n  const firstChild = w.firstChild;\n  const lExt = firstChild.lExt;\n  const curSubtree = w.children[i];\n  lExt.lThr = lContour;\n  // Change relX so that the sum of modifier after following thread is correct.\n  const diff = lSumMods - lContour.relX - firstChild.lExtRelX;\n  lExt.relX += diff;\n  // Change preliminary x coordinate so that the node does not move.\n  lExt.prelim -= diff;\n  // Update extreme node and its sum of modifiers.\n  firstChild.lExt = curSubtree.lExt;\n  firstChild.lExtRelX = curSubtree.lExtRelX;\n};\n\n// Mirror image of setLThr.\nconst setRThr = (w, i, rContour, rSumMods) => {\n  const curSubtree = w.children[i];\n  const rExt = curSubtree.rExt;\n  const lSib = w.children[i - 1];\n  rExt.rThr = rContour;\n  const diff = rSumMods - rContour.relX - curSubtree.rExtRelX;\n  rExt.relX += diff;\n  rExt.prelim -= diff;\n  curSubtree.rExt = lSib.rExt;\n  curSubtree.rExtRelX = lSib.rExtRelX;\n};\n\n// Position root between children, taking into account their modifiers\nconst positionRoot = w => {\n  if (w.hasChildren) {\n    const k0 = w.firstChild;\n    const kf = w.lastChild;\n    const prelim = (k0.prelim + k0.relX - k0.xSize / 2 +\n      kf.relX + kf.prelim + kf.xSize / 2 ) / 2;\n    Object.assign(w, {\n      prelim,\n      lExt: k0.lExt, lExtRelX: k0.lExtRelX,\n      rExt: kf.rExt, rExtRelX: kf.rExtRelX,\n    });\n  }\n};\n\n// Make/maintain a linked list of the indexes of left siblings and their\n// lowest vertical coordinate.\nconst updateLows = (lowY, index, lastLows) => {\n  // Remove siblings that are hidden by the new subtree.\n  while (lastLows !== null && lowY >= lastLows.lowY)\n    lastLows = lastLows.next;\n  // Prepend the new subtree.\n  return {\n    lowY,\n    index,\n    next: lastLows,\n  };\n};\n"],"names":["version","packageInfo","defaults","Object","freeze","data","children","node","size","flextree","options","opts","assign","accessor","name","opt","layout","tree","wtree","wrap","getWrapper","update","getFlexNode","nodeSize","spacing","c","constructor","each","oNode","descendants","y","ySize","x","xSize","ancs","ancestors","length","hasChildren","noChildren","numChildren","reduce","acc","kid","FlexNode","maxExtents","extents","nodeExtents","top","bottom","left","right","e0","e1","Math","min","max","hierarchy","prototype","prelim","shift","change","lExtRelX","lThr","rExtRelX","rThr","v","FlexClass","treeData","_wrap","parent","depth","kidsData","map","kd","hl","height","arg","arguments","kids","_dump","i1","i0","i2","kdumps","join","layoutChildren","w","i","lastLows","lowY","lExt","rExt","separate","lows","updateLows","resolveX","prevSum","parentX","relX","sum","forEach","k","shiftChange","child","lastShiftSum","lastChangeSum","shiftSum","changeSum","lSib","curSubtree","rContour","rSumMods","lContour","lSumMods","isFirst","next","dist","index","rightBottom","leftBottom","nextRContour","nextLContour","setLThr","setRThr","moveSubtree","subtree","distance","distributeExtra","curSubtreeI","leftSibI","n","delta","firstChild","lastChild","diff","positionRoot","k0","kf"],"mappings":"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"}